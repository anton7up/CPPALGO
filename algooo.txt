График по "подготовке данных" для переборного алгоритма горизонтальная прямая (y=0), так как данный алгоритм не требует подготовки и поэтому сложность составляет О(1). С увеличением числа прямоугольников время построение карты значительно увеличивается и, в целом, занимает большое количество времени, потому что сложность равна О(N^3). А вот подготовка деревьев работает значительно быстрее и занимает не так уж много времени и рост логарифмический, О(N*log(N)). Можно сделать выводы: при небольшом количестве прямоугольников для простоты и экономии памяти лучше использовать переборный алгоритм (не требует подготовки) ; во всех остальных случаях, особенно при огромном количестве прямоугольников лучше использовать деревья (быстрые, логарифмическое увеличение времени).


С увеличением числа прямоугольников время получения ответа переборным алгоритмом растёт значительно быстрее, чем время получения ответа алгоритмом на карте или алгоритмом на деревьях, так как у первого сложность О(N), а у двух других О(log(N)), но отличаются на константу: у алгоритма на деревьях она больше, потому что для получения ответа требуется сжать координаты и сделать спуск по дереву; а у алгоритма на карте она меньше, потому что требуется просто сжать координаты и обратиться к элементу матрицы. Можно сделать выводы: при большом количестве прямоугольников переборный алгоритм лучше не использовать ; алгоритм на карте всех быстрее даёт ответ, но занимает очень много времени на подготовку, поэтому при небольшом количестве прямоугольников и при огромном количестве точек можно использовать данный алгоритм.


Общие выводы: при небольшом количестве прямоугольников и точек (до ~2000) лучше всего воспользоваться переборным алгоритмом, так как не требуется времени и памяти на подготовку и при таких условиях ответ будет достаточно быстрым ; во всех остальных случаях лучше всего использовать алгоритм на деревьях, так как подготовка недолгая, а скорость получения ответов очень быстрая ; НО если точек значительно больше, чем прямоугольников (особенно если прямоугольников мало) и нам очень сильно важна скорость получения ответов, либо мы просто готовы очень много ждать ради скорости ответов, то лучше всего подойдёт алгоритм на карте.

